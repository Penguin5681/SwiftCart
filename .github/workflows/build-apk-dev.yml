name: Build and Release APKs (Development and Testing)

on:
  push:
    branches:
      - dev

jobs:  
  build:      
    name: Build & Release 
    runs-on: macos-latest 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Flutter SDK
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          channel: 'stable'
        
      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV

      - name: Build APK
        if: env.TAG_EXISTS == 'false'
        run: flutter build apk --release

      - name: Build appBundle
        if: env.TAG_EXISTS == 'false'
        run: flutter build appbundle

      - name: Build IPA
        if: env.TAG_EXISTS == 'false'
        run: flutter build ipa --no-codesign

      - name: Compress Archives and IPAs
        if: env.TAG_EXISTS == 'false'
        run: |
          cd build
          tar -czf ios_build.tar.gz ios

      - name: Upload Artifacts
        if: env.TAG_EXISTS == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
            build/ios_build.tar.gz
